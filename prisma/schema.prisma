generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id        String @id @default(cuid())
  name      String
  imageUrl  String @db.Text
  latitude  Float
  longitude Float
  zoom      Float

  states State[]
  cities City[]
  places Place[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("countries")
}

model State {
  id        String  @id @default(cuid())
  countryId String
  country   Country @relation(fields: [countryId], references: [id])
  name      String
  imageUrl  String  @db.Text
  latitude  Float
  longitude Float
  zoom      Float

  cities City[]
  places Place[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("states")
}

model City {
  id        String  @id @default(cuid())
  countryId String
  country   Country @relation(fields: [countryId], references: [id])
  stateId   String
  state     State   @relation(fields: [stateId], references: [id])
  name      String
  imageUrl  String  @db.Text
  latitude  Float
  longitude Float
  zoom      Float

  places Place[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("cities")
}

model Category {
  id   String @id @default(cuid())
  name String

  places Place[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("categories")
}

model Place {
  id          String   @id @default(cuid())
  countryId   String
  country     Country  @relation(fields: [countryId], references: [id])
  stateId     String
  state       State    @relation(fields: [stateId], references: [id])
  cityId      String
  city        City     @relation(fields: [cityId], references: [id])
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  title       String
  slug        String   @unique
  description String   @db.Text
  imageUrl    String   @db.Text
  latitude    Float
  longitude   Float
  zoom        Float
  address     String   @db.Text

  images PlaceImage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([countryId, stateId, cityId])
  @@map("places")
}

model PlaceImage {
  id          String @id @default(cuid())
  placeId     String
  place       Place  @relation(fields: [placeId], references: [id])
  url         String @db.Text
  title       String
  description String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("placeImages")
}
